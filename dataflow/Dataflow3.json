{
	"name": "Dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureSqlDatabase2",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          DateID as integer,",
				"          MedallionID as integer,",
				"          HackneyLicenseID as integer,",
				"          PickupTimeID as integer,",
				"          DropoffTimeID as integer,",
				"          PickupGeographyID as integer,",
				"          DropoffGeographyID as integer,",
				"          PickupLatitude as double,",
				"          PickupLongitude as double,",
				"          PickupLatLong as string,",
				"          DropoffLatitude as double,",
				"          DropoffLongitude as double,",
				"          DropoffLatLong as string,",
				"          PassengerCount as integer,",
				"          TripDurationSeconds as integer,",
				"          TripDistanceMiles as double,",
				"          PaymentType as string,",
				"          FareAmount as decimal(19,4),",
				"          SurchargeAmount as decimal(19,4),",
				"          TaxAmount as decimal(19,4),",
				"          TipAmount as decimal(19,4),",
				"          TollsAmount as decimal(19,4),",
				"          TotalAmount as decimal(19,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     store: 'synapse',",
				"     databaseType: 'spark',",
				"     format: 'table',",
				"     database: 'nyctaxi',",
				"     tableName: 'trip') ~> source1",
				"source1 alterRow(upsertIf(false())) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: 'dbo',",
				"     tableName: 'tb2',",
				"     insertable: true,",
				"     updateable: true,",
				"     deletable: false,",
				"     upsertable: true,",
				"     keys:['MedallionID'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}